//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BS.Output.Elementool.Elementool.BugTracking {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BugTrackingIssue", Namespace="http://schemas.datacontract.org/2004/07/ElementoolWcfService")]
    [System.SerializableAttribute()]
    public partial class BugTrackingIssue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BS.Output.Elementool.Elementool.BugTracking.IssueField[] FieldsArrayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReadOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IssueNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubmittedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SubmittedOnDateTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BS.Output.Elementool.Elementool.BugTracking.IssueField[] FieldsArray {
            get {
                return this.FieldsArrayField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldsArrayField, value) != true)) {
                    this.FieldsArrayField = value;
                    this.RaisePropertyChanged("FieldsArray");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsReadOnly {
            get {
                return this.IsReadOnlyField;
            }
            set {
                if ((this.IsReadOnlyField.Equals(value) != true)) {
                    this.IsReadOnlyField = value;
                    this.RaisePropertyChanged("IsReadOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IssueNumber {
            get {
                return this.IssueNumberField;
            }
            set {
                if ((this.IssueNumberField.Equals(value) != true)) {
                    this.IssueNumberField = value;
                    this.RaisePropertyChanged("IssueNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubmittedOn {
            get {
                return this.SubmittedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.SubmittedOnField, value) != true)) {
                    this.SubmittedOnField = value;
                    this.RaisePropertyChanged("SubmittedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SubmittedOnDateTime {
            get {
                return this.SubmittedOnDateTimeField;
            }
            set {
                if ((this.SubmittedOnDateTimeField.Equals(value) != true)) {
                    this.SubmittedOnDateTimeField = value;
                    this.RaisePropertyChanged("SubmittedOnDateTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IssueField", Namespace="http://schemas.datacontract.org/2004/07/ElementoolWcfService")]
    [System.SerializableAttribute()]
    public partial class IssueField : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanNotifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReadOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BS.Output.Elementool.Elementool.BugTracking.IssueField.FieldLayout LayoutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SendNotificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ValueListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool excludeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int positionXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int positionYField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanNotify {
            get {
                return this.CanNotifyField;
            }
            set {
                if ((this.CanNotifyField.Equals(value) != true)) {
                    this.CanNotifyField = value;
                    this.RaisePropertyChanged("CanNotify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Caption {
            get {
                return this.CaptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CaptionField, value) != true)) {
                    this.CaptionField = value;
                    this.RaisePropertyChanged("Caption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsReadOnly {
            get {
                return this.IsReadOnlyField;
            }
            set {
                if ((this.IsReadOnlyField.Equals(value) != true)) {
                    this.IsReadOnlyField = value;
                    this.RaisePropertyChanged("IsReadOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRequired {
            get {
                return this.IsRequiredField;
            }
            set {
                if ((this.IsRequiredField.Equals(value) != true)) {
                    this.IsRequiredField = value;
                    this.RaisePropertyChanged("IsRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BS.Output.Elementool.Elementool.BugTracking.IssueField.FieldLayout Layout {
            get {
                return this.LayoutField;
            }
            set {
                if ((object.ReferenceEquals(this.LayoutField, value) != true)) {
                    this.LayoutField = value;
                    this.RaisePropertyChanged("Layout");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SendNotification {
            get {
                return this.SendNotificationField;
            }
            set {
                if ((this.SendNotificationField.Equals(value) != true)) {
                    this.SendNotificationField = value;
                    this.RaisePropertyChanged("SendNotification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemName {
            get {
                return this.SystemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemNameField, value) != true)) {
                    this.SystemNameField = value;
                    this.RaisePropertyChanged("SystemName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ValueList {
            get {
                return this.ValueListField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueListField, value) != true)) {
                    this.ValueListField = value;
                    this.RaisePropertyChanged("ValueList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool exclude {
            get {
                return this.excludeField;
            }
            set {
                if ((this.excludeField.Equals(value) != true)) {
                    this.excludeField = value;
                    this.RaisePropertyChanged("exclude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int positionX {
            get {
                return this.positionXField;
            }
            set {
                if ((this.positionXField.Equals(value) != true)) {
                    this.positionXField = value;
                    this.RaisePropertyChanged("positionX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int positionY {
            get {
                return this.positionYField;
            }
            set {
                if ((this.positionYField.Equals(value) != true)) {
                    this.positionYField = value;
                    this.RaisePropertyChanged("positionY");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="IssueField.FieldLayout", Namespace="http://schemas.datacontract.org/2004/07/ElementoolWcfService")]
        [System.SerializableAttribute()]
        public partial class FieldLayout : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private BS.Output.Elementool.Elementool.BugTracking.IssueFieldType FieldTypeField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private int LinesNumField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string PositionField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public BS.Output.Elementool.Elementool.BugTracking.IssueFieldType FieldType {
                get {
                    return this.FieldTypeField;
                }
                set {
                    if ((this.FieldTypeField.Equals(value) != true)) {
                        this.FieldTypeField = value;
                        this.RaisePropertyChanged("FieldType");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public int LinesNum {
                get {
                    return this.LinesNumField;
                }
                set {
                    if ((this.LinesNumField.Equals(value) != true)) {
                        this.LinesNumField = value;
                        this.RaisePropertyChanged("LinesNum");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Position {
                get {
                    return this.PositionField;
                }
                set {
                    if ((object.ReferenceEquals(this.PositionField, value) != true)) {
                        this.PositionField = value;
                        this.RaisePropertyChanged("Position");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IssueFieldType", Namespace="http://schemas.datacontract.org/2004/07/")]
    public enum IssueFieldType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Text = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Checkbox = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dropdown = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Listbox = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Date = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reminder = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IssueAttachment", Namespace="http://schemas.datacontract.org/2004/07/ElementoolWcfService")]
    [System.SerializableAttribute()]
    public partial class IssueAttachment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddAttachmentResult", Namespace="http://schemas.datacontract.org/2004/07/")]
    public enum AddAttachmentResult : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccessDenied = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidIssueNumber = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SizeTooBig = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoFileRecieved = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MoreThanOneFileRecieved = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidExtension = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SaveFileError = 7,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuickReport", Namespace="http://schemas.datacontract.org/2004/07/ElementoolWcfService.Core")]
    [System.SerializableAttribute()]
    public partial class QuickReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://ElementoolWcfService", ConfigurationName="Elementool.BugTracking.IBugTrackingService")]
    public interface IBugTrackingService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/GetNewIssue", ReplyAction="http://ElementoolWcfService/IBugTrackingService/GetNewIssueResponse")]
        BS.Output.Elementool.Elementool.BugTracking.BugTrackingIssue GetNewIssue();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/GetNewIssue", ReplyAction="http://ElementoolWcfService/IBugTrackingService/GetNewIssueResponse")]
        System.Threading.Tasks.Task<BS.Output.Elementool.Elementool.BugTracking.BugTrackingIssue> GetNewIssueAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/GetIssueByNum", ReplyAction="http://ElementoolWcfService/IBugTrackingService/GetIssueByNumResponse")]
        BS.Output.Elementool.Elementool.BugTracking.BugTrackingIssue GetIssueByNum(int IssueNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/GetIssueByNum", ReplyAction="http://ElementoolWcfService/IBugTrackingService/GetIssueByNumResponse")]
        System.Threading.Tasks.Task<BS.Output.Elementool.Elementool.BugTracking.BugTrackingIssue> GetIssueByNumAsync(int IssueNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/SaveIssue", ReplyAction="http://ElementoolWcfService/IBugTrackingService/SaveIssueResponse")]
        BS.Output.Elementool.Elementool.BugTracking.BugTrackingIssue SaveIssue(BS.Output.Elementool.Elementool.BugTracking.BugTrackingIssue Issue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/SaveIssue", ReplyAction="http://ElementoolWcfService/IBugTrackingService/SaveIssueResponse")]
        System.Threading.Tasks.Task<BS.Output.Elementool.Elementool.BugTracking.BugTrackingIssue> SaveIssueAsync(BS.Output.Elementool.Elementool.BugTracking.BugTrackingIssue Issue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/ExecuteQuickReport", ReplyAction="http://ElementoolWcfService/IBugTrackingService/ExecuteQuickReportResponse")]
        System.Data.DataSet ExecuteQuickReport(int ReportID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/ExecuteQuickReport", ReplyAction="http://ElementoolWcfService/IBugTrackingService/ExecuteQuickReportResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> ExecuteQuickReportAsync(int ReportID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/GetIssueHistory", ReplyAction="http://ElementoolWcfService/IBugTrackingService/GetIssueHistoryResponse")]
        System.Data.DataSet GetIssueHistory(int IssueNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/GetIssueHistory", ReplyAction="http://ElementoolWcfService/IBugTrackingService/GetIssueHistoryResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetIssueHistoryAsync(int IssueNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/GetIssueRemarks", ReplyAction="http://ElementoolWcfService/IBugTrackingService/GetIssueRemarksResponse")]
        System.Data.DataSet GetIssueRemarks(int IssueNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/GetIssueRemarks", ReplyAction="http://ElementoolWcfService/IBugTrackingService/GetIssueRemarksResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetIssueRemarksAsync(int IssueNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/GetIssueAttachments", ReplyAction="http://ElementoolWcfService/IBugTrackingService/GetIssueAttachmentsResponse")]
        string[] GetIssueAttachments(int IssueNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/GetIssueAttachments", ReplyAction="http://ElementoolWcfService/IBugTrackingService/GetIssueAttachmentsResponse")]
        System.Threading.Tasks.Task<string[]> GetIssueAttachmentsAsync(int IssueNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/GetIssueAttachmentsInfo", ReplyAction="http://ElementoolWcfService/IBugTrackingService/GetIssueAttachmentsInfoResponse")]
        BS.Output.Elementool.Elementool.BugTracking.IssueAttachment[] GetIssueAttachmentsInfo(int IssueNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/GetIssueAttachmentsInfo", ReplyAction="http://ElementoolWcfService/IBugTrackingService/GetIssueAttachmentsInfoResponse")]
        System.Threading.Tasks.Task<BS.Output.Elementool.Elementool.BugTracking.IssueAttachment[]> GetIssueAttachmentsInfoAsync(int IssueNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/DownloadAttachment", ReplyAction="http://ElementoolWcfService/IBugTrackingService/DownloadAttachmentResponse")]
        BS.Output.Elementool.Elementool.BugTracking.DownloadAttachmentResponse DownloadAttachment(BS.Output.Elementool.Elementool.BugTracking.DownloadAttachmentRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Vorgang mehrere Rückgabewerte aufweist.
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/DownloadAttachment", ReplyAction="http://ElementoolWcfService/IBugTrackingService/DownloadAttachmentResponse")]
        System.Threading.Tasks.Task<BS.Output.Elementool.Elementool.BugTracking.DownloadAttachmentResponse> DownloadAttachmentAsync(BS.Output.Elementool.Elementool.BugTracking.DownloadAttachmentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/DeleteAttachment", ReplyAction="http://ElementoolWcfService/IBugTrackingService/DeleteAttachmentResponse")]
        void DeleteAttachment(System.Guid fileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/DeleteAttachment", ReplyAction="http://ElementoolWcfService/IBugTrackingService/DeleteAttachmentResponse")]
        System.Threading.Tasks.Task DeleteAttachmentAsync(System.Guid fileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/AddAttachment", ReplyAction="http://ElementoolWcfService/IBugTrackingService/AddAttachmentResponse")]
        BS.Output.Elementool.Elementool.BugTracking.AddAttachmentResult AddAttachment(int IssueNumber, string FileName, byte[] fileBytes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/AddAttachment", ReplyAction="http://ElementoolWcfService/IBugTrackingService/AddAttachmentResponse")]
        System.Threading.Tasks.Task<BS.Output.Elementool.Elementool.BugTracking.AddAttachmentResult> AddAttachmentAsync(int IssueNumber, string FileName, byte[] fileBytes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/GetMaxAttachmentSize", ReplyAction="http://ElementoolWcfService/IBugTrackingService/GetMaxAttachmentSizeResponse")]
        double GetMaxAttachmentSize();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/GetMaxAttachmentSize", ReplyAction="http://ElementoolWcfService/IBugTrackingService/GetMaxAttachmentSizeResponse")]
        System.Threading.Tasks.Task<double> GetMaxAttachmentSizeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/GetWelcomeReports", ReplyAction="http://ElementoolWcfService/IBugTrackingService/GetWelcomeReportsResponse")]
        System.Data.DataSet GetWelcomeReports();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/GetWelcomeReports", ReplyAction="http://ElementoolWcfService/IBugTrackingService/GetWelcomeReportsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetWelcomeReportsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/GetDBBackup", ReplyAction="http://ElementoolWcfService/IBugTrackingService/GetDBBackupResponse")]
        string GetDBBackup();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/GetDBBackup", ReplyAction="http://ElementoolWcfService/IBugTrackingService/GetDBBackupResponse")]
        System.Threading.Tasks.Task<string> GetDBBackupAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/ExecuteWelcomeReport", ReplyAction="http://ElementoolWcfService/IBugTrackingService/ExecuteWelcomeReportResponse")]
        BS.Output.Elementool.Elementool.BugTracking.ExecuteWelcomeReportResponse ExecuteWelcomeReport(BS.Output.Elementool.Elementool.BugTracking.ExecuteWelcomeReportRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Vorgang mehrere Rückgabewerte aufweist.
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/ExecuteWelcomeReport", ReplyAction="http://ElementoolWcfService/IBugTrackingService/ExecuteWelcomeReportResponse")]
        System.Threading.Tasks.Task<BS.Output.Elementool.Elementool.BugTracking.ExecuteWelcomeReportResponse> ExecuteWelcomeReportAsync(BS.Output.Elementool.Elementool.BugTracking.ExecuteWelcomeReportRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/GetCustomReportQueryFields", ReplyAction="http://ElementoolWcfService/IBugTrackingService/GetCustomReportQueryFieldsRespons" +
            "e")]
        BS.Output.Elementool.Elementool.BugTracking.IssueField[] GetCustomReportQueryFields(bool UserDefinedFieldsOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/GetCustomReportQueryFields", ReplyAction="http://ElementoolWcfService/IBugTrackingService/GetCustomReportQueryFieldsRespons" +
            "e")]
        System.Threading.Tasks.Task<BS.Output.Elementool.Elementool.BugTracking.IssueField[]> GetCustomReportQueryFieldsAsync(bool UserDefinedFieldsOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/ExecuteCustomReport", ReplyAction="http://ElementoolWcfService/IBugTrackingService/ExecuteCustomReportResponse")]
        BS.Output.Elementool.Elementool.BugTracking.ExecuteCustomReportResponse ExecuteCustomReport(BS.Output.Elementool.Elementool.BugTracking.ExecuteCustomReportRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Vorgang mehrere Rückgabewerte aufweist.
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/ExecuteCustomReport", ReplyAction="http://ElementoolWcfService/IBugTrackingService/ExecuteCustomReportResponse")]
        System.Threading.Tasks.Task<BS.Output.Elementool.Elementool.BugTracking.ExecuteCustomReportResponse> ExecuteCustomReportAsync(BS.Output.Elementool.Elementool.BugTracking.ExecuteCustomReportRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/GetQuickReportsList", ReplyAction="http://ElementoolWcfService/IBugTrackingService/GetQuickReportsListResponse")]
        BS.Output.Elementool.Elementool.BugTracking.QuickReport[] GetQuickReportsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/GetQuickReportsList", ReplyAction="http://ElementoolWcfService/IBugTrackingService/GetQuickReportsListResponse")]
        System.Threading.Tasks.Task<BS.Output.Elementool.Elementool.BugTracking.QuickReport[]> GetQuickReportsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/GetDateFormat", ReplyAction="http://ElementoolWcfService/IBugTrackingService/GetDateFormatResponse")]
        string GetDateFormat();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/GetDateFormat", ReplyAction="http://ElementoolWcfService/IBugTrackingService/GetDateFormatResponse")]
        System.Threading.Tasks.Task<string> GetDateFormatAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/GetAccountsList", ReplyAction="http://ElementoolWcfService/IBugTrackingService/GetAccountsListResponse")]
        string[] GetAccountsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/GetAccountsList", ReplyAction="http://ElementoolWcfService/IBugTrackingService/GetAccountsListResponse")]
        System.Threading.Tasks.Task<string[]> GetAccountsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/GetLinkedIssues", ReplyAction="http://ElementoolWcfService/IBugTrackingService/GetLinkedIssuesResponse")]
        System.Data.DataSet GetLinkedIssues(int IssueNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ElementoolWcfService/IBugTrackingService/GetLinkedIssues", ReplyAction="http://ElementoolWcfService/IBugTrackingService/GetLinkedIssuesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetLinkedIssuesAsync(int IssueNumber);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadAttachment", WrapperNamespace="http://ElementoolWcfService", IsWrapped=true)]
    public partial class DownloadAttachmentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ElementoolWcfService", Order=0)]
        public System.Guid fileId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ElementoolWcfService", Order=1)]
        public bool fileExists;
        
        public DownloadAttachmentRequest() {
        }
        
        public DownloadAttachmentRequest(System.Guid fileId, bool fileExists) {
            this.fileId = fileId;
            this.fileExists = fileExists;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadAttachmentResponse", WrapperNamespace="http://ElementoolWcfService", IsWrapped=true)]
    public partial class DownloadAttachmentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ElementoolWcfService", Order=0)]
        public byte[] DownloadAttachmentResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ElementoolWcfService", Order=1)]
        public bool fileExists;
        
        public DownloadAttachmentResponse() {
        }
        
        public DownloadAttachmentResponse(byte[] DownloadAttachmentResult, bool fileExists) {
            this.DownloadAttachmentResult = DownloadAttachmentResult;
            this.fileExists = fileExists;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ExecuteWelcomeReport", WrapperNamespace="http://ElementoolWcfService", IsWrapped=true)]
    public partial class ExecuteWelcomeReportRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ElementoolWcfService", Order=0)]
        public string ReportID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ElementoolWcfService", Order=1)]
        public string Description;
        
        public ExecuteWelcomeReportRequest() {
        }
        
        public ExecuteWelcomeReportRequest(string ReportID, string Description) {
            this.ReportID = ReportID;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ExecuteWelcomeReportResponse", WrapperNamespace="http://ElementoolWcfService", IsWrapped=true)]
    public partial class ExecuteWelcomeReportResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ElementoolWcfService", Order=0)]
        public System.Data.DataSet ExecuteWelcomeReportResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ElementoolWcfService", Order=1)]
        public string Description;
        
        public ExecuteWelcomeReportResponse() {
        }
        
        public ExecuteWelcomeReportResponse(System.Data.DataSet ExecuteWelcomeReportResult, string Description) {
            this.ExecuteWelcomeReportResult = ExecuteWelcomeReportResult;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ExecuteCustomReport", WrapperNamespace="http://ElementoolWcfService", IsWrapped=true)]
    public partial class ExecuteCustomReportRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ElementoolWcfService", Order=0)]
        public BS.Output.Elementool.Elementool.BugTracking.IssueField[] QueryFields;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ElementoolWcfService", Order=1)]
        public string Description;
        
        public ExecuteCustomReportRequest() {
        }
        
        public ExecuteCustomReportRequest(BS.Output.Elementool.Elementool.BugTracking.IssueField[] QueryFields, string Description) {
            this.QueryFields = QueryFields;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ExecuteCustomReportResponse", WrapperNamespace="http://ElementoolWcfService", IsWrapped=true)]
    public partial class ExecuteCustomReportResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ElementoolWcfService", Order=0)]
        public System.Data.DataSet ExecuteCustomReportResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ElementoolWcfService", Order=1)]
        public string Description;
        
        public ExecuteCustomReportResponse() {
        }
        
        public ExecuteCustomReportResponse(System.Data.DataSet ExecuteCustomReportResult, string Description) {
            this.ExecuteCustomReportResult = ExecuteCustomReportResult;
            this.Description = Description;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBugTrackingServiceChannel : BS.Output.Elementool.Elementool.BugTracking.IBugTrackingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BugTrackingServiceClient : System.ServiceModel.ClientBase<BS.Output.Elementool.Elementool.BugTracking.IBugTrackingService>, BS.Output.Elementool.Elementool.BugTracking.IBugTrackingService {
        
        public BugTrackingServiceClient() {
        }
        
        public BugTrackingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BugTrackingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BugTrackingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BugTrackingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public BS.Output.Elementool.Elementool.BugTracking.BugTrackingIssue GetNewIssue() {
            return base.Channel.GetNewIssue();
        }
        
        public System.Threading.Tasks.Task<BS.Output.Elementool.Elementool.BugTracking.BugTrackingIssue> GetNewIssueAsync() {
            return base.Channel.GetNewIssueAsync();
        }
        
        public BS.Output.Elementool.Elementool.BugTracking.BugTrackingIssue GetIssueByNum(int IssueNumber) {
            return base.Channel.GetIssueByNum(IssueNumber);
        }
        
        public System.Threading.Tasks.Task<BS.Output.Elementool.Elementool.BugTracking.BugTrackingIssue> GetIssueByNumAsync(int IssueNumber) {
            return base.Channel.GetIssueByNumAsync(IssueNumber);
        }
        
        public BS.Output.Elementool.Elementool.BugTracking.BugTrackingIssue SaveIssue(BS.Output.Elementool.Elementool.BugTracking.BugTrackingIssue Issue) {
            return base.Channel.SaveIssue(Issue);
        }
        
        public System.Threading.Tasks.Task<BS.Output.Elementool.Elementool.BugTracking.BugTrackingIssue> SaveIssueAsync(BS.Output.Elementool.Elementool.BugTracking.BugTrackingIssue Issue) {
            return base.Channel.SaveIssueAsync(Issue);
        }
        
        public System.Data.DataSet ExecuteQuickReport(int ReportID) {
            return base.Channel.ExecuteQuickReport(ReportID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ExecuteQuickReportAsync(int ReportID) {
            return base.Channel.ExecuteQuickReportAsync(ReportID);
        }
        
        public System.Data.DataSet GetIssueHistory(int IssueNumber) {
            return base.Channel.GetIssueHistory(IssueNumber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetIssueHistoryAsync(int IssueNumber) {
            return base.Channel.GetIssueHistoryAsync(IssueNumber);
        }
        
        public System.Data.DataSet GetIssueRemarks(int IssueNumber) {
            return base.Channel.GetIssueRemarks(IssueNumber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetIssueRemarksAsync(int IssueNumber) {
            return base.Channel.GetIssueRemarksAsync(IssueNumber);
        }
        
        public string[] GetIssueAttachments(int IssueNumber) {
            return base.Channel.GetIssueAttachments(IssueNumber);
        }
        
        public System.Threading.Tasks.Task<string[]> GetIssueAttachmentsAsync(int IssueNumber) {
            return base.Channel.GetIssueAttachmentsAsync(IssueNumber);
        }
        
        public BS.Output.Elementool.Elementool.BugTracking.IssueAttachment[] GetIssueAttachmentsInfo(int IssueNumber) {
            return base.Channel.GetIssueAttachmentsInfo(IssueNumber);
        }
        
        public System.Threading.Tasks.Task<BS.Output.Elementool.Elementool.BugTracking.IssueAttachment[]> GetIssueAttachmentsInfoAsync(int IssueNumber) {
            return base.Channel.GetIssueAttachmentsInfoAsync(IssueNumber);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BS.Output.Elementool.Elementool.BugTracking.DownloadAttachmentResponse BS.Output.Elementool.Elementool.BugTracking.IBugTrackingService.DownloadAttachment(BS.Output.Elementool.Elementool.BugTracking.DownloadAttachmentRequest request) {
            return base.Channel.DownloadAttachment(request);
        }
        
        public byte[] DownloadAttachment(System.Guid fileId, ref bool fileExists) {
            BS.Output.Elementool.Elementool.BugTracking.DownloadAttachmentRequest inValue = new BS.Output.Elementool.Elementool.BugTracking.DownloadAttachmentRequest();
            inValue.fileId = fileId;
            inValue.fileExists = fileExists;
            BS.Output.Elementool.Elementool.BugTracking.DownloadAttachmentResponse retVal = ((BS.Output.Elementool.Elementool.BugTracking.IBugTrackingService)(this)).DownloadAttachment(inValue);
            fileExists = retVal.fileExists;
            return retVal.DownloadAttachmentResult;
        }
        
        public System.Threading.Tasks.Task<BS.Output.Elementool.Elementool.BugTracking.DownloadAttachmentResponse> DownloadAttachmentAsync(BS.Output.Elementool.Elementool.BugTracking.DownloadAttachmentRequest request) {
            return base.Channel.DownloadAttachmentAsync(request);
        }
        
        public void DeleteAttachment(System.Guid fileId) {
            base.Channel.DeleteAttachment(fileId);
        }
        
        public System.Threading.Tasks.Task DeleteAttachmentAsync(System.Guid fileId) {
            return base.Channel.DeleteAttachmentAsync(fileId);
        }
        
        public BS.Output.Elementool.Elementool.BugTracking.AddAttachmentResult AddAttachment(int IssueNumber, string FileName, byte[] fileBytes) {
            return base.Channel.AddAttachment(IssueNumber, FileName, fileBytes);
        }
        
        public System.Threading.Tasks.Task<BS.Output.Elementool.Elementool.BugTracking.AddAttachmentResult> AddAttachmentAsync(int IssueNumber, string FileName, byte[] fileBytes) {
            return base.Channel.AddAttachmentAsync(IssueNumber, FileName, fileBytes);
        }
        
        public double GetMaxAttachmentSize() {
            return base.Channel.GetMaxAttachmentSize();
        }
        
        public System.Threading.Tasks.Task<double> GetMaxAttachmentSizeAsync() {
            return base.Channel.GetMaxAttachmentSizeAsync();
        }
        
        public System.Data.DataSet GetWelcomeReports() {
            return base.Channel.GetWelcomeReports();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetWelcomeReportsAsync() {
            return base.Channel.GetWelcomeReportsAsync();
        }
        
        public string GetDBBackup() {
            return base.Channel.GetDBBackup();
        }
        
        public System.Threading.Tasks.Task<string> GetDBBackupAsync() {
            return base.Channel.GetDBBackupAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BS.Output.Elementool.Elementool.BugTracking.ExecuteWelcomeReportResponse BS.Output.Elementool.Elementool.BugTracking.IBugTrackingService.ExecuteWelcomeReport(BS.Output.Elementool.Elementool.BugTracking.ExecuteWelcomeReportRequest request) {
            return base.Channel.ExecuteWelcomeReport(request);
        }
        
        public System.Data.DataSet ExecuteWelcomeReport(string ReportID, ref string Description) {
            BS.Output.Elementool.Elementool.BugTracking.ExecuteWelcomeReportRequest inValue = new BS.Output.Elementool.Elementool.BugTracking.ExecuteWelcomeReportRequest();
            inValue.ReportID = ReportID;
            inValue.Description = Description;
            BS.Output.Elementool.Elementool.BugTracking.ExecuteWelcomeReportResponse retVal = ((BS.Output.Elementool.Elementool.BugTracking.IBugTrackingService)(this)).ExecuteWelcomeReport(inValue);
            Description = retVal.Description;
            return retVal.ExecuteWelcomeReportResult;
        }
        
        public System.Threading.Tasks.Task<BS.Output.Elementool.Elementool.BugTracking.ExecuteWelcomeReportResponse> ExecuteWelcomeReportAsync(BS.Output.Elementool.Elementool.BugTracking.ExecuteWelcomeReportRequest request) {
            return base.Channel.ExecuteWelcomeReportAsync(request);
        }
        
        public BS.Output.Elementool.Elementool.BugTracking.IssueField[] GetCustomReportQueryFields(bool UserDefinedFieldsOnly) {
            return base.Channel.GetCustomReportQueryFields(UserDefinedFieldsOnly);
        }
        
        public System.Threading.Tasks.Task<BS.Output.Elementool.Elementool.BugTracking.IssueField[]> GetCustomReportQueryFieldsAsync(bool UserDefinedFieldsOnly) {
            return base.Channel.GetCustomReportQueryFieldsAsync(UserDefinedFieldsOnly);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BS.Output.Elementool.Elementool.BugTracking.ExecuteCustomReportResponse BS.Output.Elementool.Elementool.BugTracking.IBugTrackingService.ExecuteCustomReport(BS.Output.Elementool.Elementool.BugTracking.ExecuteCustomReportRequest request) {
            return base.Channel.ExecuteCustomReport(request);
        }
        
        public System.Data.DataSet ExecuteCustomReport(BS.Output.Elementool.Elementool.BugTracking.IssueField[] QueryFields, ref string Description) {
            BS.Output.Elementool.Elementool.BugTracking.ExecuteCustomReportRequest inValue = new BS.Output.Elementool.Elementool.BugTracking.ExecuteCustomReportRequest();
            inValue.QueryFields = QueryFields;
            inValue.Description = Description;
            BS.Output.Elementool.Elementool.BugTracking.ExecuteCustomReportResponse retVal = ((BS.Output.Elementool.Elementool.BugTracking.IBugTrackingService)(this)).ExecuteCustomReport(inValue);
            Description = retVal.Description;
            return retVal.ExecuteCustomReportResult;
        }
        
        public System.Threading.Tasks.Task<BS.Output.Elementool.Elementool.BugTracking.ExecuteCustomReportResponse> ExecuteCustomReportAsync(BS.Output.Elementool.Elementool.BugTracking.ExecuteCustomReportRequest request) {
            return base.Channel.ExecuteCustomReportAsync(request);
        }
        
        public BS.Output.Elementool.Elementool.BugTracking.QuickReport[] GetQuickReportsList() {
            return base.Channel.GetQuickReportsList();
        }
        
        public System.Threading.Tasks.Task<BS.Output.Elementool.Elementool.BugTracking.QuickReport[]> GetQuickReportsListAsync() {
            return base.Channel.GetQuickReportsListAsync();
        }
        
        public string GetDateFormat() {
            return base.Channel.GetDateFormat();
        }
        
        public System.Threading.Tasks.Task<string> GetDateFormatAsync() {
            return base.Channel.GetDateFormatAsync();
        }
        
        public string[] GetAccountsList() {
            return base.Channel.GetAccountsList();
        }
        
        public System.Threading.Tasks.Task<string[]> GetAccountsListAsync() {
            return base.Channel.GetAccountsListAsync();
        }
        
        public System.Data.DataSet GetLinkedIssues(int IssueNumber) {
            return base.Channel.GetLinkedIssues(IssueNumber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetLinkedIssuesAsync(int IssueNumber) {
            return base.Channel.GetLinkedIssuesAsync(IssueNumber);
        }
    }
}
